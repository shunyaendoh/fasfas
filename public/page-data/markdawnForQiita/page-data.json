{"componentChunkName":"component---src-layouts-blog-post-layout-js","path":"/markdawnForQiita/","result":{"data":{"markdownRemark":{"html":"<h1>はじめに</h1>\n<blockquote>\n<p>Laravelを学んで「一通りデータベースとのCRUD処理はもう出来た！」という人のための記事。\n次はそのサイトにJavascriptやCSSを使ってみよう。\n今回はJavascriptでアラートを表示させてみます。</p>\n</blockquote>\n<h2>Laravel Mixとは</h2>\n<blockquote>\n<p>Laravel Mixは多くの一般的なCSSとJavaScriptのプリプロセッサを使用し、Laravelアプリケーションために、構築過程をWebpackでスラスラと定義できるAPIを提供しています。(<a href=\"https://readouble.com/laravel/5.5/ja/mix.html\">Laravel公式リファレンス</a>)</p>\n</blockquote>\n<p><font color=red>何言ってんだ・・・？</font>\n僕もわかりません笑\n簡単にいうと、</p>\n<blockquote>\n<p>Laravel Mixはjsファイルやcss(sass)ファイルをLaravel上で使えるようにしてくれるやつ。\n( jsファイルやsassファイルをコンパイルしてLaravel上で使えるようにするAPI )</p>\n</blockquote>\n<h2>インストールと準備</h2>\n<p>以下をお手元のパソコン君にインストールしてください\n・ node.js (<a href=\"https://nodejs.org/ja/download/\">node.js公式サイト</a>)\n・ npm (node.js用のパッケージマネージャ。Vue.js, React, Bootstrapなどがインストール出来ます。Node.jsをインストールすれば使えるようになります。)</p>\n<h3>インストール方法</h3>\n<p>今回は以下の２つの方法を紹介したいと思います。</p>\n<p>A. CUIを使ったコマンドでのインストール方法( 難易度: 普通 )\nB. 公式サイトからインストーラをダウンロードしてくる方法( 難易度: 低い )</p>\n<p><font color= red>僕はAのCUIでのインストール方法をおすすめしています。</font></p>\n<h3>A. CUIでのインストール( Homebrewを使うのでMacのみです )</h3>\n<p>手順は以下になります。</p>\n<ol>\n<li>Homebrewのインストール( <a href=\"https://brew.sh/index_ja.html\">Homebrew公式サイト</a> )</li>\n<li>nodebrewのインストール</li>\n<li>node.jsのインストール</li>\n</ol>\n<h4>1. Homebrewのインストール</h4>\n<p>まずはターミナル( コンソール画面 )を開きましょう。そこに、</p>\n<pre><code>/usr/bin/ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\"\n</code></pre>\n<p>こちらを丸々コピーして実行( エンターキー )してください。\nインストールは時間がかかるので新たにコマンドは打たず、$マークが出るまでほうっておきましょう。\n( 2019/9/28 現在のコマンドになりますので、<a href=\"https://brew.sh/index_ja.html\">公式サイト</a>を確認してください。)</p>\n<p>無事にインストールが出来たら<code>brew -v</code>コマンドを打ってみましょう。( Homebrewのバージョンを確認するコマンドです。 )</p>\n<img width=\"569\" alt=\"スクリーンショット 2019-09-28 15.03.27.png\" src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/489303/1eef30c5-f7df-f11f-5aab-a0435478c146.png\">\n<p>このように「Homebrew ○.○.○○」と表示されていれば成功です。</p>\n<h4>2. nodebrewのインストール</h4>\n<p>Homebrewが無事にインストール出来たのでnodebrewをインストールできるようになりました。ターミナル上に、</p>\n<pre><code>brew install nodebrew\n</code></pre>\n<p>こちらを打って実行してください。\nこのコマンドはHomebrewを使ってnodebrewをインストールするコマンドです。</p>\n<p>インストールが完了したら<code>nodebrew -v</code>コマンドを打ってみましょう。( nodebrewのバージョンを確認するコマンドです。 )</p>\n<img width=\"569\" alt=\"スクリーンショット 2019-09-28 15.15.12.png\" src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/489303/b9a591cc-fae8-1317-073f-ec5ce0babba2.png\">\n<p>何やらたくさん出てきましたが一番上に「nodebrew ○.○.○」と表示されていれば成功です。 ( なお、他に表示されているのは使い方の例や使えるコマンド集です。いわば説明書ですね。 )</p>\n<h4>3. node.jsのインストール</h4>\n<p>お待たせしましたやっとnode.jsがインストール出来ます。\nターミナルは開いていますね？以下を入力して実行してください。</p>\n<pre><code>nodebrew install-binary stable\n</code></pre>\n<p>このコマンドはnodebrewを使って安定版のnodeをインストールするコマンドです。なお、最新版をインストールしたい場合は、</p>\n<pre><code>nodebrew install-binary latest\n</code></pre>\n<p>としてください。</p>\n<p>インストールが完了したら<code>nodebrew ls</code>コマンドを実行してください。\nこのコマンドはインストールされたnodeのリストを表示するコマンドです。</p>\n<img width=\"569\" alt=\"スクリーンショット 2019-09-28 15.28.50.png\" src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/489303/cc7ca67b-ba10-6b38-c36d-a00ef9c720f3.png\">\n<p>このように「v○.○.○」と表示されていればインストール成功です。\nその下に<code>current: none</code>と出ているのはインストールした直後は有効化されていない為です。</p>\n<p>そこで、</p>\n<pre><code>nodebrew use v○.○.○\n</code></pre>\n<p>コマンドで有効化します。( ○はお使いのバージョンを入力してください。 )\nもう一度<code>nodebrew ls</code>コマンドを実行すると、</p>\n<img width=\"569\" alt=\"スクリーンショット 2019-09-28 15.27.56.png\" src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/489303/800d1597-513c-b36b-1cbb-ddc31b2cc782.png\">\n<p>インストールしたバージョンのnodeが設定されました。</p>\n<h5>＊ nodeコマンドを使えるように環境PATHを通す</h5>\n<p>nodeが無事にインストール出来ましたがこのままではnodeコマンドが使えません。パソコン君にnodeコマンドを使うための道筋を教えてあげましょう。( お使いのshellがbashの場合 )</p>\n<pre><code>echo 'export PATH=$HOME/.nodebrew/current/bin:$PATH' >> ~/.bash_profile\n</code></pre>\n<p>こちらのコマンドは.bash<em>profileというファイルに''の中身を追記しているコマンドです。\n`source ~/.bash</em>profile<code>を実行してください。 このコマンドで再読み込みさせます。 最後に</code>node -v`コマンドを実行してください。</p>\n<img width=\"569\" alt=\"スクリーンショット 2019-09-28 15.44.03.png\" src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/489303/ba7581a6-5cba-c93f-3486-4986d5df4ee9.png\">\n<p>このように「v○○.○○.○」と表示されていれば成功です。</p>\n<h3>B. 公式サイトからインストーラをダウンロードする方法</h3>\n<p>手順は以下になります。</p>\n<ol>\n<li><a href=\"https://nodejs.org/ja/download/\">公式サイト</a>で最新版もしくは推奨板のインストーラをダウンロード</li>\n<li>インストーラをダブルクリックして起動</li>\n<li>指示に従ってインストール</li>\n<li>ターミナルで<code>node -v</code>,<code>npm -v</code>を打ってみて確認</li>\n</ol>\n<p>非常に簡単です。</p>\n<h2>Laravel Mixを使ってみよう</h2>\n<p>「あれ、これなんの記事だっけ？」そう思ったあなた。\n大丈夫です。僕も同じことを思っていました。</p>\n<p>環境構築は時間がかかるのです。やっと準備が整ったので、\n新しくLaravelのプロジェクトを立ち上げましょう。\nターミナルを起動してください。</p>\n<p><code>mkdir {フォルダ名}</code>コマンドでフォルダを新規作成してください。\n次に、<code>cd {フォルダ名}</code>コマンドで作成したフォルダに移動してください。その中で、</p>\n<pre><code>composer create-project --prefer-dist laravel/laravel {プロジェクト名} 5.7\n</code></pre>\n<p>こちらのコマンドを打ってプロジェクトを作成してください。\n( 時間がかかるのでしばらく待ちましょう。 )</p>\n<img width=\"569\" alt=\"スクリーンショット 2019-09-28 16.11.29.png\" src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/489303/530c1120-a038-8d90-5426-554d1a29a622.png\">\n<p>無事に作成が完了すると、「○○○○ successfully」みたいな文字列が表示されて$マークが現れます。</p>\n<p>今回使うエディタはVisual Studio Codeです。</p>\n<p><code>code {プロジェクト名}</code>コマンドを入力してvscodeでプロジェクトを開きましょう。</p>\n<hr>\n<p>ここからはvscodeでの操作になります。\nvscode上でSHIFT(↑) + control(^) + backquote(`)を押してください。\nvscodeでターミナルが使えるようになります。</p>\n<h3>npmのインストール</h3>\n<p><code>npm install</code>コマンドを実行してください。\nこのコマンドは作成したLaravelのプロジェクトのフィルダ直下に入っている「package.json」を参照してそこに記載されているパッケージをインストールしています。\nこのコマンドを実行するとLaravel Mixが使えるようになります。</p>\n<h3>javascriptのファイルを作成</h3>\n<p><code>resources</code>フォルダに<code>assets</code>フォルダを作成してください。\nそしてその中にさらに<code>js</code>フォルダを作ってください。\nその中に<code>app.js</code>と<code>sample.js</code>を作成してください\n(resources&#x3C;assets&#x3C;js&#x3C;app.js,sample.js)</p>\n<img width=\"201\" alt=\"スクリーンショット 2019-09-28 17.01.32.png\" src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/489303/e4df56c6-4b30-c43f-17b7-87b1bbaa74e5.png\">\n<p>そして、sample.jsを開いて以下のように記入してください。</p>\n<pre><code class=\"language-js:sample.js\">alert('CAUTION!!');\n</code></pre>\n<p>次に、app.jsを開いて以下のように記入してください。</p>\n<pre><code class=\"language-js:app.js\">require('./sample');\n</code></pre>\n<h3>webpack.mix.jsを編集</h3>\n<p>作成したLaravelプロジェクトの直下に入っている<code>webpack.mix.js</code>ファイルを開いてください。</p>\n<pre><code class=\"language-js:webpack.mix.js\">const mix = require('laravel-mix');\n\n/*\n |--------------------------------------------------------------------------\n | Mix Asset Management\n |--------------------------------------------------------------------------\n |\n | Mix provides a clean, fluent API for defining some Webpack build steps\n | for your Laravel application. By default, we are compiling the Sass\n | file for the application as well as bundling up all the JS files.\n |\n */\n\nmix.js('resources/js/app.js', 'public/js')\n    .sass('resources/sass/app.scss', 'public/css');\n\n// 以下を追加\nmix.js('resources/assets/js/app.js', 'public/js');\n</code></pre>\n<p>上記の「以下を追加」の下の部分を追加してください。\nこれは<code>resources/assets/js/app.js</code>の中身を\n<code>public/js</code>の中に入れる( コンパイル )という意味で、\n<code>public/js</code>で先ほど書いたapp.jsを読み込めるということです。\n( app.jsにはsample.jsを読み込めるように\n<code>require('./sample')</code>を記入しているのでapp.jsだけ読み込めれば大丈夫ということです。 )</p>\n<h3>sample.blade.phpを作成</h3>\n<p>jsファイルを読み込む準備が出来たので読み込みたいページを作ります。\n<code>resources/views</code>の中に<code>sample.blade.php</code>を作成してください。</p>\n<p>次にターミナル上で以下のコマンドを実行してください。\n<code>php artisan make:auth</code>\nすると<code>views/layouts</code>フォルダが作成されます。</p>\n<img width=\"201\" alt=\"スクリーンショット 2019-09-28 17.46.19.png\" src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/489303/a72cc74e-b881-2027-1b60-7244a42a7b15.png\">\n<p>sample.blade.phpを開いてください。\nそして、以下のように記入してください。</p>\n<pre><code class=\"language-php:sample.blade.php\">@extends('layouts.app')\n</code></pre>\n<h3>web.phpを編集</h3>\n<p><code>routes</code>フォルダに入っている<code>web.php</code>を開いてください。\n以下のように一箇所編集してください。</p>\n<pre><code class=\"language-php:web.php\">&#x3C;?php\n\n/*\n|--------------------------------------------------------------------------\n| Web Routes\n|--------------------------------------------------------------------------\n|\n| Here is where you can register web routes for your application. These\n| routes are loaded by the RouteServiceProvider within a group which\n| contains the \"web\" middleware group. Now create something great!\n|\n*/\n\nRoute::get('/', function () {\n    return view('sample');  // ここを編集 (welcome->sample)\n});\n\nAuth::routes();\n\nRoute::get('/home', 'HomeController@index')->name('home');\n</code></pre>\n<h3>コンパイルとサーバーの立ち上げ</h3>\n<p>今まで書いてきたコードを適応させるために以下のコマンドを実行してください。\n( 時間がかかるのでしばらく待っていてください。 )\n<code>npm run dev</code>\n成功したら以下のように表示されます。\n(なお、<code>npm run dev</code>は開発環境においてのコンパイル方法で余計な機能が付いてきます。実際にサービスとしてデプロイする場合には<code>npm run production</code>コマンドでコンパイルしてください。)\n<img width=\"450\" alt=\"スクリーンショット 2019-09-28 18.02.27.png\" src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/489303/a211ba5c-1fb1-178f-8f9b-8f5c4a0c4923.png\"></p>\n<p>次にサーバーを立ち上げます。\n<code>php artisan serve</code>コマンドを実行してください。\n<img width=\"440\" alt=\"スクリーンショット 2019-09-28 18.05.14.png\" src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/489303/6ddfdd79-96fa-e84b-78d6-d4be21b81288.png\"></p>\n<h3><a href=\"http://127.0.0.1:8000\">http://127.0.0.1:8000</a>へアクセス</h3>\n<img width=\"447\" alt=\"スクリーンショット 2019-09-28 18.09.51.png\" src=\"https://qiita-image-store.s3.ap-northeast-1.amazonaws.com/0/489303/e645b09e-2e3b-046f-5405-e2b4f002ad42.png\">\n<p>無事にアラートが表示されましたか？</p>\n<hr>\n<h2>参考サイト</h2>\n<p>・ <a href=\"https://qiita.com/ryosukes/items/24a556b9e634c183f93b\">Laravel mix事始め</a>\n・ <a href=\"https://qiita.com/jaxx2104/items/2277cec77850f2d83c7a\">Node.js と npm インストールとアップデート</a>\n・ <a href=\"https://qiita.com/u-dai/items/83766b69a0e18488b005\">[Laravel 5.6] Laravel 開発で Javascript を書きたいとき（Laravel Mix の使い方とか）</a>\n・ <a href=\"https://qiita.com/kyosuke5_20/items/c5f68fc9d89b84c0df09\">MacにNode.jsをインストール</a>\n・ <a href=\"https://qiita.com/PolarBear/items/62c0416492810b7ecf7c\">Node.js / npm をインストール (Mac環境)</a></p>","frontmatter":{"title":"LaravelでJavascriptやCSSを使おう( Laravel Mix )"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/markdawnForQiita/"}}}